{"name": "test_zippopotam_country_query_api[{}-200-{\"post code\": \"90210\", \"country\": \"US\"}-us/90210]", "status": "failed", "statusDetails": {"message": "AssertionError: [\n      {\n          \"json_path\": \"country\",\n          \"expected\": \"US\",\n          \"actual\": \"United States\"\n      }\n  ]\nassert [{'actual': '...': 'country'}] == []\n  Left contains one more item: {'actual': 'United States', 'expected': 'US', 'json_path': 'country'}\n  Use -v to get the full diff", "trace": "request = <FixtureRequest for <Function test_zippopotam_country_query_api[{}-200-{\"post code\": \"90210\", \"country\": \"US\"}-us/90210]>>\n_pytest_bdd_example = {'query_param_url': '{}', 'query_string': 'us/90210', 'status_code': '200', 'validation_json': '{\"post code\": \"90210\", \"country\": \"US\"}'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n_response = <Response [200]>, validation_json = '{\"post code\": \"90210\", \"country\": \"US\"}'\n\n    @then(parsers.parse(\"I validate the response against {validation_json:String}\", extra_types=dict(String=str)))\n    def validate_response(_response, validation_json):\n        _result = JsonManipulator().validate_value_present(_response.json(), json.loads(validation_json))\n>       assert _result == [], json.dumps(_result, indent = 4)\nE       AssertionError: [\nE             {\nE                 \"json_path\": \"country\",\nE                 \"expected\": \"US\",\nE                 \"actual\": \"United States\"\nE             }\nE         ]\nE       assert [{'actual': '...': 'country'}] == []\nE         Left contains one more item: {'actual': 'United States', 'expected': 'US', 'json_path': 'country'}\nE         Use -v to get the full diff\n\ntests/step_definitions/service/test_query_steps.py:38: AssertionError"}, "description": "/Users/vignesh.thangaraj/Documents/Open source/tests/features/service/query.feature: Zippopotam country query api", "attachments": [{"name": "test_zippopotam_country_query_api[{}-200-{\"post code\": \"90210\", \"country\": \"US\"}-us_90210].log", "source": "03c6fcb6-37eb-48fb-b1b3-919850ed29be-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "e9ab8f21-13fb-403e-b0cc-c6d50b677316-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "_pytest_bdd_example", "value": "{'query_param_url': '{}', 'status_code': '200', 'validation_json': '{\"post code\": \"90210\", \"country\": \"US\"}', 'query_string': 'us/90210'}"}], "start": 1638954525575, "stop": 1638954526296, "uuid": "0b5d7666-7891-4953-a190-ac0a62e12328", "historyId": "07f78b3674ae310e00263363d5550a2a", "testCaseId": "93827dec6b066d61b2ae425c78485a42", "fullName": "tests.step_definitions.service.test_query_steps#test_zippopotam_country_query_api", "labels": [{"name": "tag", "value": "test"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests.step_definitions.service"}, {"name": "suite", "value": "test_query_steps"}, {"name": "host", "value": "CVMS Root MacBookPro"}, {"name": "thread", "value": "6751-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.step_definitions.service.test_query_steps"}]}
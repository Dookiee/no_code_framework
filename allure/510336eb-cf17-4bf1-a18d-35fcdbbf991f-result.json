{"name": "test_zippopotam_country_query_api[{}-404-{}-us/90210]", "status": "failed", "statusDetails": {"message": "AssertionError: Expecting Status code: 404 Actual Status Code is: 200\nassert 200 == 404\n +  where 200 = <Response [200]>.status_code", "trace": "request = <FixtureRequest for <Function test_zippopotam_country_query_api[{}-404-{}-us/90210]>>\n_pytest_bdd_example = {'query_param_url': '{}', 'query_string': 'us/90210', 'status_code': '404', 'validation_json': '{}'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../.local/share/virtualenvs/Open_source-B9TDmm6p/lib/python3.7/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n_response = <Response [200]>, code = 404\n\n    @then(parsers.parse('the response contains results for {code:Number}', extra_types=dict(Number=int)))\n    def response_validation(_response, code):\n>       assert _response.status_code == code, \"Expecting Status code: \" + \\\n                                              str(code) + \" Actual Status Code is: \" + str(_response.status_code)\nE       AssertionError: Expecting Status code: 404 Actual Status Code is: 200\nE       assert 200 == 404\nE        +  where 200 = <Response [200]>.status_code\n\ntests/step_definitions/service/test_query_steps.py:20: AssertionError"}, "description": "/Users/vignesh.thangaraj/Documents/Open source/tests/features/service/query.feature: Zippopotam country query api", "attachments": [{"name": "test_zippopotam_country_query_api[{}-404-{}-us_90210].log", "source": "48bd3d6a-e792-4461-897a-451cf7d9c76e-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "0ed948a0-c52f-4ac8-ba96-58a48f29c326-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "_pytest_bdd_example", "value": "{'query_param_url': '{}', 'status_code': '404', 'validation_json': '{}', 'query_string': 'us/90210'}"}], "start": 1638954526435, "stop": 1638954527161, "uuid": "5ea946d9-a9a9-42c7-91fe-00859ae3a348", "historyId": "f9b79a9544bad3969cd8efcbb4801dc4", "testCaseId": "93827dec6b066d61b2ae425c78485a42", "fullName": "tests.step_definitions.service.test_query_steps#test_zippopotam_country_query_api", "labels": [{"name": "tag", "value": "test"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests.step_definitions.service"}, {"name": "suite", "value": "test_query_steps"}, {"name": "host", "value": "CVMS Root MacBookPro"}, {"name": "thread", "value": "6751-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.step_definitions.service.test_query_steps"}]}